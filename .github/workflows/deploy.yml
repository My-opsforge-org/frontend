name: Deploy Frontend to VM

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure Frontend directory exists
        run: mkdir -p Frontend

      - name: Create .env file
        run: |
          echo "REACT_APP_API_BASE_URL=${{ secrets.REACT_APP_API_BASE_URL }}" > Frontend/.env

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        working-directory: ./Frontend

      - name: Build React app
        run: npm run build
        working-directory: ./Frontend

      - name: List Frontend directory contents after build
        run: ls -l Frontend

      - name: Print npm build log if exists
        run: |
          if [ -f Frontend/npm-debug.log ]; then
            tail -n 100 Frontend/npm-debug.log
          else
            echo "No npm-debug.log found."
          fi

      - name: List build directory contents
        run: ls -l Frontend/build

      - name: Clean target directory on VM
        run: |
          sudo apt-get update && sudo apt-get install -y sshpass
          sshpass -p ${{ secrets.VM_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} "rm -rf /home/${{ secrets.VM_USER }}/frontend && mkdir -p /home/${{ secrets.VM_USER }}/frontend"

      - name: Copy build to VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          password: ${{ secrets.VM_PASSWORD }}
          source: "Frontend/build/*"
          target: "/home/${{ secrets.VM_USER }}/frontend"

      - name: Restart nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          password: ${{ secrets.VM_PASSWORD }}
          script: |
            sudo systemctl restart nginx 